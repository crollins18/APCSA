package kareltherobot;
public class DrawCS_CalebRollins implements Directions
{
    public static void main(String args[])  
    {
    	World.setVisible(true);
    	World.showSpeedControl(true);

    	UrRobot karel = new UrRobot(1, 1, North, 20);  
    	
    	//Creates the C and S
    	
    	//Starts at the Origin
    	
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.putBeeper();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	
    	//Erases the C and S
    	//Used find and replace in word to change put beeper to pick beeper
    	
    	//Starts at the Origin
    	
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.pickBeeper();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.move();
    	karel.turnLeft();
    	karel.turnLeft();
    	karel.turnLeft();

    	
        karel.turnOff();
    } 
}